/*
* tabDropdown version 1.0
* Author: Anish MM - anishmm@gmail.com
* (c) 2012, Anish MM
* Dependencies: jQuery v1.6+, jQuery UI 1.8+
* 
* Description:
* tabDropdown extends jQuery UI tabs to include a dropdown for when tabs break to the maxTab count
*
* Usage:
* 
* Simple:
* 		$("#mytab").tabDropdown();
*
* 	Options:
*  		$("#mytab").tabDropdown({
*  			className: "tabDropdown",       // classname for css
*  			Active: true,                   // Active dropdown features
*  			dropDownText: "More",               // set drop down text
*  			showCount: false,               // show drop down count
*  			dropIcon: "&#9660; ",           // icon/caret - if using image, specify image width
*  			dropWidth: "30%",               // width of dropdown
*              maxTab: 4                       // max tab
*  		});
*/
(function (b) { var a = { init: function (c) { if (c === undefined) { c = {} } c = b.extend({}, b.fn.tabDropdown.defaults, c); return this.each(function () { var k = c, e = b(this); (k.className != "") && e; e.tabs(); if (k.Active) { $at = b("<div />").addClass(k.className).appendTo(e); var j = e.find(".ui-tabs-nav"); var i = j.find("li"); var f = (i.length - k.maxTab); if (f > 0) { var d, g = b("<li/>").addClass("ui-state-default").addClass("ui-corner-top").addClass("dropDown").appendTo(j); var h = b("<a/>").attr("href", "javascript: void(0);").addClass("dropDown").html(k.dropIcon + k.dropDownText + (k.showCount === true ? " (" + f + ")" : "")).appendTo(g); h.click(function () { clearTimeout(d); $at.slideDown(); d = setTimeout(function () { $at.slideUp(); clearTimeout(d) }, 3000); var l = b(this).parent().offset(); l.top = (l.top + b(this).parent().height() + 1); $at.offset(l).css("width", k.dropWidth) }); $at.mouseenter(function () { clearTimeout(d) }); $at.mouseleave(function () { clearTimeout(d); var l = b(this); d = setTimeout(function () { l.slideUp() }, 1000) }); i.each(function (n, m) { if ((k.maxTab - 1) < n) { b(m).css("display", "none"); var l = b(this).find("a"); var o = b("<a/>").attr("href", "#tab").html(l.text()); o.click(function (p) { $at.slideUp(); $at.find("a").removeClass("highlight"); l.click(); b(this).addClass("highlight") }).appendTo($at) } }) } } }) } }; b.fn.tabDropdown = function (c) { if (a[c]) { return a[c].apply(this, Array.prototype.slice.call(arguments, 1)) } else { if (typeof c === "object" || !c) { return a.init.apply(this, arguments) } else { b.error("Method " + c + " does not exist on $.tabDropdown") } } }; b.fn.tabDropdown.defaults = { className: "tabDropdown", Active: true, dropDownText: "More", showCount: false, dropIcon: "&#9660; ", dropWidth: "66%", maxTab: 4} })(jQuery);

